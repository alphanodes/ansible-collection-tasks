---
- name: Set tmp file for dump
  ansible.builtin.set_fact:
    tmp_mysql_dump_file: "{{ project_sync_tmp_dir }}/_mysql_{{ date_stamp }}.sql"

- name: Check if hostname is defined
  ansible.builtin.fail:
    msg: 'if no host name is defined, db_source_name and db_target_name has to be different.'
  when:
    - source_host | length == 0
    - instance.db_source_name == instance.db_target_name

- name: Create MySQL database local dump - {{ instance.name }}
  community.mysql.mysql_db:
    login_unix_socket: "{{ mysql_socket if mysql_root_plugin == 'auth_socket' else omit }}"
    name: '{{ instance.db_source_name }}'
    state: dump
    quick: '{{ project_sync_mysql_quick }}'
    single_transaction: '{{ project_sync_mysql_single_transaction }}'
    target: '{{ tmp_mysql_dump_file }}'
  when: source_host | length == 0

- name: Create MySQL database dump on remote host - {{ instance.name }}
  ansible.builtin.command: ssh {{ ssh_source_options + ' ' if ssh_source_options != '' else '' }}{{ source_host }} "mysqldump {{ project_sync_mysqldump_options }} {{ instance.db_source_name }} > {{ tmp_mysql_dump_file }}"
  when: source_host | length > 0

- name: Transfer database dump to host - {{ instance.name }}
  ansible.builtin.command: scp {{ scp_source_options + ' ' if scp_source_options != '' else '' }}{{ source_host }}:{{ tmp_mysql_dump_file }} {{ tmp_mysql_dump_file }}
  when: source_host | length > 0

- name: Cleanup remote tmp file - {{ instance.name }}
  ansible.builtin.command: ssh {{ ssh_source_options + ' ' if ssh_source_options != '' else '' }}{{ source_host }} rm {{ tmp_mysql_dump_file }}
  when: source_host | length > 0

- name: Drop database - {{ instance.name }}
  community.mysql.mysql_db:
    name: '{{ instance.db_target_name }}'
    login_host: '{{ instance.db_target_login_host | default(omit) }}'
    login_unix_socket: '{{ instance.db_target_login_unix_socket | default(omit) }}'
    state: absent
  when: project_sync_recreate_db

- name: Create database - {{ instance.name }}
  community.mysql.mysql_db:
    name: '{{ instance.db_target_name }}'
    login_host: '{{ instance.db_target_login_host | default(omit) }}'
    login_unix_socket: '{{ instance.db_target_login_unix_socket | default(omit) }}'
    state: present
  when: project_sync_recreate_db

- name: Run pre sql commands for MySQL - {{ instance.name }}
  community.mysql.mysql_query:
    login_unix_socket: "{{ mysql_socket if mysql_root_plugin == 'auth_socket' else omit }}"
    login_db: '{{ instance.db_target_name }}'
    query: '{{ item }}'
  loop: '{{ instance.pre_sql_commands | default([]) }}'

- name: Import database dump - {{ instance.name }}
  community.mysql.mysql_db:
    login_unix_socket: "{{ mysql_socket if mysql_root_plugin == 'auth_socket' else omit }}"
    name: '{{ instance.db_target_name }}'
    state: import
    target: '{{ tmp_mysql_dump_file }}'

- name: Cleanup local tmp file - {{ instance.name }}
  ansible.builtin.file:
    path: '{{ tmp_mysql_dump_file }}'
    state: absent

- name: Run post sql commands for MySQL - {{ instance.name }}
  community.mysql.mysql_query:
    login_unix_socket: "{{ mysql_socket if mysql_root_plugin == 'auth_socket' else omit }}"
    login_db: '{{ instance.db_target_name }}'
    query: '{{ item }}'
  loop: '{{ instance.post_sql_commands | default([]) }}'
