---
- name: Set fact backup_database_name
  ansible.builtin.set_fact:
    backup_database_name: "{{ db.database | default(db) }}"

- name: Set facts for backup file - {{ backup_database_name }}
  ansible.builtin.set_fact:
    backup_file_name: "db-{{ backup_database_name }}-{{ date_stamp }}-{{ backup_file_period }}.pg_dump"
    backup_file_owner: postgres

- name: Create postgresql dump - {{ backup_database_name }}
  community.postgresql.postgresql_db:
    name: '{{ backup_database_name }}'
    target: '{{ backup_dir }}/{{ backup_file_name }}'
    login_user: '{{ backup_postgresql_user | default(omit) }}'
    login_password: '{{ backup_postgresql_password | default(omit) }}'
    login_host: '{{ backup_postgresql_host | default(omit) }}'
    port: '{{ backup_postgresql_port | default(omit) }}'
    dump_extra_args: '{{ backup_postgresqldump_options }}'
    state: dump
  become_user: '{{ backup_file_owner }}'
  become: true

- name: Include encrypt file
  ansible.builtin.include_tasks: file_encrypt.yml
  vars:
    file_path: '{{ backup_dir }}/{{ backup_file_name }}'
    file_owner: '{{ backup_file_owner }}'
  when: backup_file_encrypted

- name: Include checksum file
  ansible.builtin.include_tasks: file_checksum.yml
  vars:
    file_path: "{{ backup_dir }}/{{ backup_file_name + '.gpg' if backup_file_encrypted else backup_file_name }}"
    file_owner: '{{ backup_file_owner }}'
  when: backup_create_hashfiles
